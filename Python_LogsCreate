# -*- coding: utf-8 -*-
"""
Created on Fri Jun 21 09:59:25 2019

@author: DineshkumarS
"""

import logging
from logging.handlers import RotatingFileHandler
import os, time

os.environ['TZ'] = 'Asia/Kolkata'
# time.tzset()
import datetime


class logs():
    def __init__(self, file_name):
        logging.root.handlers = []
        self.logger = logging.getLogger(self.__class__.__name__)
        self.logger.setLevel(logging.DEBUG)
        handler = RotatingFileHandler(file_name, maxBytes=20000, backupCount=3)
        handler.setLevel(logging.DEBUG)
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        self.logger.addHandler(handler)

    def write_logs_exception(self, e):
        self.logger.exception(e)

    def write_logs_info(self, e):
        self.logger.info(e)

    def write_logs_debug(self, e):
        self.logger.debug(e)

    def write_logs_error(self, e):
        self.logger.error(e)


# =============================================================================
if __name__ == '__main__':
    #    lgr = logs("C:\Users\DineshkumarS\Desktop\Logtesting\sample_file3"+ datetime.datetime.now().strftime("%Y%m%d"))
    # logpath = gsp.sa_loco_logpath + datetime.datetime.now().strftime("%Y-%m-%d_%Hh-%Mm-%Ss") + ".log"
    logpath_new = "C:/Users/DineshkumarS/Desktop/Logtesting/sample_file" + datetime.datetime.now().strftime("%Y%m%d")
    lgr = logs(logpath_new)
    for i in range(1, 1000):
        lgr.write_logs_exception("Some exception ")
        lgr.write_logs_info("This is loggin info ")
        lgr.write_logs_error("This is Error ")

# =============================================================================
